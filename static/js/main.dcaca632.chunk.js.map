{"version":3,"sources":["components/Converter/Converter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Converter","useState","celsius","setCelsius","fahrenheit","setFahrenheit","className","type","value","onChange","e","Number","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRA6CeA,EA1Ca,WACxB,MAA8BC,mBAAiB,GAA/C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCF,mBAAiB,IAArD,mBAAOG,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAKC,UAAU,YAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,oDACA,uBACIC,KAAK,SACLC,MAAON,EACPO,SAdhB,SAA8BC,GAE1B,IAAMF,EAAQG,OAAOD,EAAEE,OAAOJ,OAC9BH,EAAsB,IAARG,EAAc,IAC5BL,EAAWK,SAaP,sBAAKF,UAAU,gBAAf,UACI,uDACA,uBACIC,KAAK,SACLC,MAAOJ,EACPK,SA/BhB,SACIC,GAGA,IAAMF,EAAQG,OAAOD,EAAEE,OAAOJ,OAC9BL,EAA0B,OAAdK,EAAQ,KACpBH,EAAcG,aCEPK,EAXO,WAClB,OACI,qBAAKP,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,uDACA,cAAC,EAAD,UCKDQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dcaca632.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Converter.scss\";\r\n\r\nconst Converter: React.FC = () => {\r\n    const [celsius, setCelsius] = useState<number>(0);\r\n    const [fahrenheit, setFahrenheit] = useState<number>(32);\r\n\r\n    function convertFahrenheitToCelsius(\r\n        e: React.ChangeEvent<HTMLInputElement>\r\n    ) {\r\n        // (50°F - 32) x .5556 = 10°C\r\n        const value = Number(e.target.value);\r\n        setCelsius((value - 32) * 0.5556);\r\n        setFahrenheit(value);\r\n    }\r\n\r\n    function convertCelsiusToFahr(e: React.ChangeEvent<HTMLInputElement>) {\r\n        // (30°C x 1.8) + 32 = 86°F\r\n        const value = Number(e.target.value);\r\n        setFahrenheit(value * 1.8 + 32);\r\n        setCelsius(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container-row\">\r\n                <label>Celsius (ºC)</label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={celsius}\r\n                    onChange={convertCelsiusToFahr}\r\n                />\r\n            </div>\r\n            <div className=\"container-row\">\r\n                <label>Fahrenheit (ºF)</label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={fahrenheit}\r\n                    onChange={convertFahrenheitToCelsius}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Converter;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport Converter from \"./components/Converter/Converter\";\n\nconst App: React.FC = () => {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Temperature Converter</h1>\n                <Converter />\n            </header>\n        </div>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.scss\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}